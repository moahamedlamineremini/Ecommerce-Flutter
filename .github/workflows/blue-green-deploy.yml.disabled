name: Firebase Blue-Green Deployment

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  FLUTTER_VERSION: '3.35.4'  # Version Flutter compatible avec Dart SDK 3.9.0+
  FIREBASE_PROJECT_ID: 'ecommerce-55dd8-4d606'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'  # Version mise à jour pour Dart 3.9.0+
          cache: true  # Activé pour améliorer les performances

      - name: Disable Flutter analytics
        run: flutter config --no-analytics

      - name: Get dependencies
        run: flutter pub get

      - name: Run analyzer
        run: flutter analyze

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4  # Mise à jour vers v4
        with:
          files: coverage/lcov.info
          fail_ci_if_error: false

  build:
    name: Build Web App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'  # Version mise à jour pour Dart 3.9.0+
          cache: true

      - name: Disable Flutter analytics
        run: flutter config --no-analytics

      - name: Get dependencies
        run: flutter pub get

      - name: Build web app
        run: flutter build web --release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4  # Mise à jour vers v4
        with:
          name: web-build
          path: build/web/
          retention-days: 5

  deploy-preview:
    name: Deploy to Preview Channel (Blue/Green)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    outputs:
      preview-url: ${{ steps.deploy.outputs.details_url }}
      channel: ${{ steps.determine-channel.outputs.channel }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'  # Version mise à jour pour Dart 3.9.0+
          cache: true

      - name: Download build artifacts
        uses: actions/download-artifact@v4  # Mise à jour vers v4
        with:
          name: web-build
          path: build/web/

      - name: Determine deployment channel
        id: determine-channel
        run: |
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "channel=blue" >> $GITHUB_OUTPUT
          else
            echo "channel=green" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Firebase Hosting Preview
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ECOMMERCE_55DD8_4D606 }}
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          channelId: ${{ steps.determine-channel.outputs.channel }}
          expires: 30d

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7  # Mise à jour vers v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 **Preview deployed** (Channel: `${{ steps.determine-channel.outputs.channel }}`)\n\n🌍 **URL**: ${{ steps.deploy.outputs.details_url }}\n\n✨ Test your changes before merging!'
            })

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://${{ env.FIREBASE_PROJECT_ID }}.web.app
    outputs:
      production-url: https://${{ env.FIREBASE_PROJECT_ID }}.web.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'  # Version mise à jour pour Dart 3.9.0+
          cache: true

      - name: Disable Flutter analytics
        run: flutter config --no-analytics

      - name: Download build artifacts
        uses: actions/download-artifact@v4  # Mise à jour vers v4
        with:
          name: web-build
          path: build/web/

      - name: Deploy to Firebase Hosting Production
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ECOMMERCE_55DD8_4D606 }}
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          channelId: live

  smoke-tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4  # Mise à jour vers v4
        with:
          node-version: '20'  # Mise à jour vers Node 20

      - name: Install Playwright
        run: |
          npm init -y
          npm install @playwright/test
          npx playwright install

      - name: Run smoke tests
        run: |
          cat > smoke-tests.js << 'EOF'
          const { test, expect } = require('@playwright/test');
          
          test('App loads successfully', async ({ page }) => {
            await page.goto('https://${{ env.FIREBASE_PROJECT_ID }}.web.app');
          
            // Attendre le chargement de Flutter
            await page.waitForSelector('flt-glass-pane', { timeout: 30000 });
          
            // Vérifier que l'app charge sans erreurs critiques
            const errors = [];
            page.on('pageerror', error => errors.push(error.message));
          
            await page.waitForLoadState('networkidle');
            expect(errors.filter(e => !e.includes('Non-Error promise rejection'))).toHaveLength(0);
          });
          
          test('Navigation works', async ({ page }) => {
            await page.goto('https://${{ env.FIREBASE_PROJECT_ID }}.web.app');
            await page.waitForSelector('flt-glass-pane', { timeout: 30000 });
          
            // Test de navigation basique Flutter
            const homeText = page.locator('flt-semantics').filter({ hasText: 'Accueil' }).first();
            if (await homeText.count() > 0) {
              await expect(homeText).toBeVisible();
            }
          });
          EOF
          
          npx playwright test smoke-tests.js

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4  # Mise à jour vers v4
        with:
          name: smoke-test-results
          path: test-results/

      - name: Notify success
        if: success()
        uses: actions/github-script@v7  # Mise à jour vers v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '🎉 **Production deployment successful!**\n\n🌍 **Live URL**: https://${{ env.FIREBASE_PROJECT_ID }}.web.app\n\n✅ All smoke tests passed'
            })

  promote-channel:
    name: Promote Channel to Live (Manual)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: promotion
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: Authenticate with Firebase
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ECOMMERCE_55DD8_4D606 }}' > $HOME/firebase-key.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase-key.json

      - name: List available channels
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase-key.json
          firebase hosting:channel:list --project ${{ env.FIREBASE_PROJECT_ID }}

      - name: Promote channel to live
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase-key.json
          # Promote the green channel to live (this should be configurable)
          firebase hosting:clone ${{ env.FIREBASE_PROJECT_ID }}:green ${{ env.FIREBASE_PROJECT_ID }}:live

  rollback:
    name: Rollback (Manual Trigger)
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    environment:
      name: rollback
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Rollback instructions
        run: |
          echo "📄 **Rollback available via Firebase Console:**"
          echo "https://console.firebase.google.com/project/${{ env.FIREBASE_PROJECT_ID }}/hosting"
          echo ""
          echo "**Or use Firebase CLI:**"
          echo "firebase hosting:clone ${{ env.FIREBASE_PROJECT_ID }}:[previous-channel] ${{ env.FIREBASE_PROJECT_ID }}:live"
